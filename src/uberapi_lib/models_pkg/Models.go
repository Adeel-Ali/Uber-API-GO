/*
 * uberapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 05/21/2016
 */

package models_pkg


/*
 * Structure for the custom type ProductCollection
 */
type ProductCollection struct {
    Products        []*Product      `json:"products" form:"products"` //List of products
}

/*
 * Structure for the custom type PriceEstimateCollection
 */
type PriceEstimateCollection struct {
    Prices          []*PriceEsitmate `json:"prices" form:"prices"` //List of price estimates
}

/*
 * Structure for the custom type TimeEstimateCollection
 */
type TimeEstimateCollection struct {
    Times           []*TimeEstimate `json:"times" form:"times"` //List of time estimates
}

/*
 * Structure for the custom type Location
 */
type Location struct {
    Address         string          `json:"address" form:"address"` //The address in user readable form
    Latitude        float64         `json:"latitude" form:"latitude"` //Latitude component of location.
    Longitude       float64         `json:"longitude" form:"longitude"` //Longitude component of location.
}

/*
 * Structure for the custom type History
 */
type History struct {
    Uuid            string          `json:"uuid" form:"uuid"` //History item id
    RequestTime     int64           `json:"request_time" form:"request_time"` //Time when requested
    ProductId       string          `json:"product_id" form:"product_id"` //The product that was used
    Status          string          `json:"status" form:"status"` //Status of the product e.g., completed
    Distance        float64         `json:"distance" form:"distance"` //Distance travelled
    StartTime       int64           `json:"start_time" form:"start_time"` //Time of starting the journey
    StartLocation   Location        `json:"start_location" form:"start_location"` //Location of starting the journey
    EndTime         int64           `json:"end_time" form:"end_time"` //Time of journey end
    EndLocation     Location        `json:"end_location" form:"end_location"` //Location where journey ended
}

/*
 * Structure for the custom type UserActivity
 */
type UserActivity struct {
    Offset          int64           `json:"offset" form:"offset"` //Position in pagination.
    Limit           int64           `json:"limit" form:"limit"` //Number of items to retrieve (100 max).
    Count           int64           `json:"count" form:"count"` //Total number of items available.
    History         []*History      `json:"history" form:"history"` //Information including the pickup location, dropoff location, request start time, request end time, and distance of requests (in miles), as well as the product type that was requested.
}

/*
 * Structure for the custom type UserProfile
 */
type UserProfile struct {
    FirstName       string          `json:"first_name" form:"first_name"` //First name of the Uber user.
    LastName        string          `json:"last_name" form:"last_name"` //Last name of the Uber user.
    Email           string          `json:"email" form:"email"` //Email address of the Uber user
    Picture         string          `json:"picture" form:"picture"` //Image URL of the Uber user.
    PromoCode       string          `json:"promo_code" form:"promo_code"` //Promo code of the Uber user.
}

/*
 * Structure for the custom type PromotionsResponse
 */
type PromotionsResponse struct {
    DisplayText     string          `json:"display_text" form:"display_text"` //A localized string we recommend to use when offering the promotion to users.
    LocalizedValue  string          `json:"localized_value" form:"localized_value"` //The value of the promotion that is available to a user in this location in the local currency.
    Type            string          `json:"type" form:"type"` //The type of the promo which is either "trip_credit" or "account_credit".
}

/*
 * Structure for the custom type Request
 */
type Request struct {
    ErrorBase        // Anonymous member to emulate model inheritence
    RequestId        string          `json:"request_id" form:"request_id"` //The unique ID of the Request.
    Status           string          `json:"status" form:"status"` //The status of the Request indicating state.
    Vehicle          map[string]interface{} `json:"vehicle" form:"vehicle"` //The object that contains vehicle details.
    Driver           map[string]interface{} `json:"driver" form:"driver"` //The object that contains driver details.
    Location         map[string]interface{} `json:"location" form:"location"` //The object that contains the location information of the vehicle and driver
    Eta              int64           `json:"eta" form:"eta"` //The estimated time of vehicle arrival in minutes.
    SurgeMultiplier  float64         `json:"surge_multiplier" form:"surge_multiplier"` //The surge pricing multiplier used to calculate the increased price of a Request. A multiplier of 1.0 means surge pricing is not in effect.
}

/*
 * Structure for the custom type ErrorBase
 */
type ErrorBase struct {
    Meta            string          `json:"meta" form:"meta"` //TODO: Write general description for this field
    Errors          []*Errors       `json:"errors" form:"errors"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type Meta
 */
type Meta struct {
    SurgeConfirmation  SurgeConfirmation `json:"surge_confirmation" form:"surge_confirmation"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type SurgeConfirmation
 */
type SurgeConfirmation struct {
    Href                  string          `json:"href" form:"href"` //TODO: Write general description for this field
    SurgeConfirmationId   string          `json:"surge_confirmation_id" form:"surge_confirmation_id"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type Errors
 */
type Errors struct {
    Status          int64           `json:"status" form:"status"` //TODO: Write general description for this field
    Code            string          `json:"code" form:"code"` //TODO: Write general description for this field
    Title           string          `json:"title" form:"title"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type Vehicle
 */
type Vehicle struct {
    Make            string          `json:"make" form:"make"` //TODO: Write general description for this field
    Model           string          `json:"model" form:"model"` //TODO: Write general description for this field
    LicensePlate    string          `json:"license_plate" form:"license_plate"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type RequestMapResponse
 */
type RequestMapResponse struct {
    RequestId       string          `json:"request_id" form:"request_id"` //TODO: Write general description for this field
    Href            string          `json:"href" form:"href"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type Product
 */
type Product struct {
    ProductId       string          `json:"product_id" form:"product_id"` //Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
    Description     string          `json:"description" form:"description"` //Description of product.
    DisplayName     string          `json:"display_name" form:"display_name"` //Display name of product.
    Capacity        int64           `json:"capacity" form:"capacity"` //Capacity of product. For example, 4 people.
    Image           string          `json:"image" form:"image"` //Image URL representing the product.
}

/*
 * Structure for the custom type TimeEstimate
 */
type TimeEstimate struct {
    ProductId       string          `json:"product_id" form:"product_id"` //Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
    DisplayName     string          `json:"display_name" form:"display_name"` //Display name of product.
    Estimate        int64           `json:"estimate" form:"estimate"` //ETA for the product (in seconds). Always show estimate in minutes.
}

/*
 * Structure for the custom type PriceEsitmate
 */
type PriceEsitmate struct {
    ProductId        string          `json:"product_id" form:"product_id"` //Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
    CurrencyCode     string          `json:"currency_code" form:"currency_code"` //ISO 4217 currency code.
    DisplayName      string          `json:"display_name" form:"display_name"` //Display name of product.
    Estimate         string          `json:"estimate" form:"estimate"` //Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
    LowEstimate      int64           `json:"low_estimate" form:"low_estimate"` //Lower bound of the estimated price.
    HighEstimate     int64           `json:"high_estimate" form:"high_estimate"` //Upper bound of the estimated price.
    SurgeMultiplier  float64         `json:"surge_multiplier" form:"surge_multiplier"` //Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
    Duration         int64           `json:"duration" form:"duration"` //Expected activity duration (in seconds). Always show duration in minutes.
    Distance         float64         `json:"distance" form:"distance"` //Expected activity distance (in miles).
}

/*
 * Structure for the custom type RequestDetailsCollections
 */
type RequestDetailsCollections struct {
    Status           string          `json:"status" form:"status"` //The status of the Request indicating state.
    Driver           Driver          `json:"driver" form:"driver"` //The object that contains driver details.
    Eta              int64           `json:"eta" form:"eta"` //The estimated time of vehicle arrival in minutes.
    Location         Location        `json:"location" form:"location"` //The object that contains the location information of the vehicle and driver.
    Vehicle          Vehicle         `json:"vehicle" form:"vehicle"` //The object that contains vehicle details.
    SurgeMultiplier  float64         `json:"surge_multiplier" form:"surge_multiplier"` //The surge pricing multiplier used to calculate the increased price of a Request. A multiplier of 1.0 means surge pricing is not in effect.
    RequestId        string          `json:"request_id" form:"request_id"` //The unique ID of the Request.
}

/*
 * Structure for the custom type Driver
 */
type Driver struct {
    PhoneNumber     string          `json:"phone_number" form:"phone_number"` //The formatted phone number for contacting the driver.
    Rating          float64         `json:"rating" form:"rating"` //The driver's star rating out of 5 stars.
    PictureUrl      string          `json:"picture_url" form:"picture_url"` //The URL to the photo of the driver.
    Name            string          `json:"name" form:"name"` //The first name of the driver.
}

/*
 * Structure for the custom type RequestBody
 */
type RequestBody struct {
    ProductId             string          `json:"product_id" form:"product_id"` //The unique ID of the product being requested.
    StartLatitude         float64         `json:"start_latitude" form:"start_latitude"` //The beginning or "pickup" latitude.
    StartLongitude        float64         `json:"start_longitude" form:"start_longitude"` //The beginning or "pickup" longitude.
    EndLatitude           float64         `json:"end_latitude" form:"end_latitude"` //The final or destination latitude.
    EndLongitude          float64         `json:"end_longitude" form:"end_longitude"` //The final or destination longitude.
    SurgeConfirmationId   string          `json:"surge_confirmation_id" form:"surge_confirmation_id"` //The unique identifier of the surge session for a user. Required when returned from a 409 Conflict response on previous POST attempt.
}
